{"version":3,"file":"component---src-pages-index-js-03ecbb403852bbf63399.js","mappings":"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","sources":["webpack://roadmap/./src/components/navbar/Navbar.jsx","webpack://roadmap/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://roadmap/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://roadmap/./static/img/National_emblem.png","webpack://roadmap/./src/components/about/About.jsx","webpack://roadmap/./src/components/order/Order.jsx","webpack://roadmap/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport \"./navbar.scss\";\n\nconst links = [\"Буйруктар\", \"Усулдук көрсөтмөлөр\", \"Типтүү устав\", \"Этаптар\"];\n\nconst Navbar = () => {\n  const [stickyNav, setStickyNav] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const handleScroll = () => {\n    if (window.scrollY >= 100) {\n      setStickyNav(true);\n    } else {\n      setStickyNav(false);\n    }\n  };\n\n  const handleMenuClick = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  if (typeof window !== \"undefined\") {\n    window.addEventListener(\"scroll\", handleScroll);\n  }\n\n  return (\n    <nav className={stickyNav ? \"navbar--active\" : \"navbar\"}>\n      <div className=\"container\">\n        <div className=\"navbar-inner\">\n          <Link className=\"navbar-link\" to=\"/\">\n            Башкы бет\n          </Link>\n          <button className=\"navbar-toggle\" onClick={handleMenuClick}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z\" />\n            </svg>\n          </button>\n          <ul className={menuOpen ? \"navbar-menu--active\" : \"navbar-menu\"}>\n            {links.map((link, index) => (\n              <li key={index + link}>\n                <a className=\"navbar-link\" href={`#${link}`}>\n                  {link}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxDuration ? Infinity : duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calculateDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an wildcard keyframes are hydrated by the origin.\n         */\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] === null) {\n                target[i] = i === 0 ? origin : target[i - 1];\n            }\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.10.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.10.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.10.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","export default __webpack_public_path__ + \"static/National_emblem-9f800bcb63c8d0bbfb3af024197addfc.png\";","import React from \"react\";\nimport \"./about.scss\";\nimport { motion } from \"framer-motion\";\nimport emblem from \"../../../static/img/National_emblem.png\";\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <div className=\"container\">\n        <motion.div\n          className=\"motion\"\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"about-img\">\n            <img src={emblem} alt=\"Кыргыз Республикасынын герби\" width={100} />\n          </div>\n\n          <h1 className=\"about-title\">\n            Кыргыз Республикасынын Министрлер кабинетине караштуу Мамлекеттик\n            кызмат жана жергиликтүү өз алдынча башкаруу иштери боюнча\n            мамлекеттик агенттиги\n          </h1>\n          <h2 className=\"about-subtitle\">\n            Жергиликтүү жамааттын уставын кабыл алуудагы ишке ашырылуучу этаптар\n          </h2>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./order.scss\";\n\nconst animation = {\n  hidden: {\n    y: -100,\n    opacity: 0,\n  },\n  visible: (custom) => ({\n    y: 0,\n    opacity: 1,\n    transition: {\n      delay: custom * 0.2,\n    },\n  }),\n};\n\nconst Order = () => {\n  return (\n    <motion.section\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ amount: 0.3 }}\n      className=\"order\"\n    >\n      <div className=\"container\">\n        <motion.h2\n          custom={1}\n          variants={animation}\n          className=\"section-title order-main-title\"\n        >\n          Жергиликтүү уставдарды кабыл алуу боюнча тийиштүү\n          <br />\n          <span>буйруктар жана иш-кагаздар</span>\n        </motion.h2>\n\n        <div className=\"order-inner\">\n          <motion.div\n            custom={2}\n            variants={animation}\n            className=\"order-col-title order-col\"\n          >\n            <h3 className=\"order-icon\">\n              Кыргыз Республикасынын Министрлер Кабинетине караштуу мамлекеттик\n              кызмат жана жергиликтүү өз алдынча башкаруу иштери боюнча\n              мамлекеттик агенттиктин\n              <br />\n              <strong>2022-жылдын 12-декабрындагы № 279 буйругу</strong>\n            </h3>\n          </motion.div>\n          <motion.div custom={3} variants={animation} className=\"order-col\">\n            <p className=\"order-icon\">\n              «Кыргыз Республикасынын Жергиликтүү жамаатарынын Типтүү уставы»\n            </p>\n          </motion.div>\n          <motion.div custom={3} variants={animation} className=\"order-col\">\n            <p className=\"order-icon\">\n              Жергиликтүү жамааттын Типтүү уставынын айрым жоболорун турмушка\n              ашыруу боюнча усулдук көрсөтмө\n            </p>\n          </motion.div>\n        </div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default Order;\n","import * as React from \"react\";\nimport \"../styles/styles.scss\";\nimport Navbar from \"../components/navbar/Navbar\";\nimport About from \"../components/about/About\";\nimport Order from \"../components/order/Order\";\n\nconst IndexPage = () => {\n  return (\n    <>\n      <header className=\"header\">\n        <Navbar />\n        <About />\n      </header>\n      <main>\n        <Order />\n      </main>\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = () => (\n  <>\n    <title>Жергиликтуу уставдарды кабыл алуу жол картасы</title>\n    <meta\n      name=\"description\"\n      content=\"Жергиликтуу уставдарды кабыл алуу жол картасы\"\n    />\n  </>\n);\n"],"names":["links","stickyNav","setStickyNav","useState","menuOpen","setMenuOpen","handleScroll","window","scrollY","addEventListener","className","to","onClick","xmlns","width","height","viewBox","d","map","link","index","key","href","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","splice","delete","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","calculateDuration","generator","Infinity","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","div","src","emblem","alt","hidden","visible","section","h2","Head","content"],"sourceRoot":""}